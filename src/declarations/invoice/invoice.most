// Version: 1.0.0
type AccountIdentifier__2 =
  {#blob : Blob; #principal : Principal; #text : Text};
type DayCanisterCyclesData = [var Nat64];
type DayCanisterHeapMemorySizeData = [var Nat64];
type DayCanisterMemorySizeData = [var Nat64];
type DayData =
  {
    canisterCyclesData : DayCanisterCyclesData;
    canisterHeapMemorySizeData : DayCanisterHeapMemorySizeData;
    canisterMemorySizeData : DayCanisterMemorySizeData;
    updateCallsData : DayUpdateCallsCountData
  };
type DayDataId = Nat32;
type DayUpdateCallsCountData = [var Nat64];
type Details = {description : Text; meta : Blob};
type Invoice =
  {
    amount : Nat;
    amountPaid : Nat;
    creator : Principal;
    destination : AccountIdentifier__2;
    details : ?Details;
    expiration : Time;
    id : Nat;
    paid : Bool;
    permissions : ?Permissions;
    token : TokenVerbose;
    verifiedAtTime : ?Time
  };
type Invoice__2 = Invoice;
type LogMessageArray = [LogMessagesData];
type LogMessagesData = {message : Text; timeNanos : Nanos};
type LoggerUpgradeData = UpgradeData__1;
type Nanos = Nat64;
type Permissions = {canGet : [Principal]; canVerify : [Principal]};
type Time = Int;
type TokenVerbose = {decimals : Int; meta : ?{Issuer : Text}; symbol : Text};
type UpgradeData = {#v1 : {dayData : [UpgradeDataDayTuple]}};
type UpgradeDataDayTuple = (DayDataId, DayData);
type UpgradeData__1 =
  {#v1 : {full : Bool; maxCount : Nat; next : Nat; queue : LogMessageArray}};
type UpgradeData__2 = UpgradeData;
type UpgradeData__3 = {admins : [Principal]};
type UpgradeData__4 = UpgradeData__3;
actor {
  stable var _AdminsUD : ?UpgradeData__4;
  stable var _LogsUD : ?LoggerUpgradeData;
  stable var _MonitorUD : ?UpgradeData__2;
  stable var entries : [(Nat, Invoice__2)];
  stable var invoiceCounter : Nat
};
